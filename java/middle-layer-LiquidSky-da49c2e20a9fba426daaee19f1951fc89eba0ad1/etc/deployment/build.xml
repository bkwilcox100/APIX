<?xml version="1.0" encoding="UTF-8"?>

<project name="Liquid Sky" default="help" basedir=".">

	<!-- Import common tasks -->
	<import file="${basedir}/build-cloudsql.xml"/>
	<import file="${basedir}/build-project.xml"/>
	<import file="${basedir}/build-properties.xml"/>

	<!--
	This script automates App Engine project management tasks.  See
	https://cloud.google.com/sdk/gcloud/reference/ for further reference
	-->

	<property name="build.autorun.dir" value="${basedir}/autorun" />
	<property name="build.config.dir" value="${basedir}/config" />
	<property name="build.db.dir" value="${basedir}/db" />
	<property name="build.tmp.dir" value="${basedir}/tmp" />

	<property file="${build.config.dir}/script-default.properties" />
	<property file="${build.autorun.dir}/application-autorun.properties" />

	<property name="cloud.keyring.id" value="application-shared" />
	<property name="cloud.location.id" value="global" />

	<target name="help">
		<echo>
Valid ANT targets:
  - help: Display this help message.
  - info: Display info about a project.
          Specify values for "project.sql.instance.id" and/or
          "project.billing.id" to get more information:
          ant -Dproject.sql.instance.id=heb-mysql info
  - create-project: Create a new project.
          To create a project without requiring any user input
          an autorun properties file must be created and
          invoked with:
          ant -propertyfile ./autorun/xyz.properties create-project
  - delete-project: Delete an existing project.
		</echo>
	</target>

	<target name="-init">
		<delete dir="${build.tmp.dir}" />
		<mkdir dir="${build.tmp.dir}" />
		<echo>
Project IDs must start with a lowercase letter and can have
lowercase ASCII letters, digits or hyphens. Project IDs must
be between 6 and 30 characters.
		</echo>
		<!-- IMPORTANT - an input task is skipped if the property has already been set elsewhere -->
		<input message="Google Cloud Project ID [appengine.app.id]:" addproperty="appengine.app.id" />
		<property name="cloud.root.dir" value="gs://${appengine.app.id}" />
		<property name="cloud.tmp.dir" value="${cloud.root.dir}/tmp" />
		<property name="cloud.properties.dir" value="${cloud.root.dir}/properties" />
		<property name="appengine.service.account" value="${appengine.app.id}@appspot.gserviceaccount.com" />
	</target>

	<target name="-confirm-continue" unless="enable.autorun">
		<input message="Are you sure you wish to continue (y/n)?" validargs="y,n" addproperty="do.continue" />
		<condition property="do.abort">
			<equals arg1="n" arg2="${do.continue}"/>
		</condition>
		<fail if="do.abort">Build aborted by user.</fail>
	</target>

	<target name="-press-enter-to-continue" unless="enable.autorun">
		<input message="Press the Return key to continue..." />
	</target>

	<target name="info" depends="-init,-info-project,-info-sql,-info-billing" />

	<target name="-info-project" if="appengine.app.id">
		<echo>
+++ Project info: ${appengine.app.id} +++
		</echo>
		<exec executable="gcloud" failonerror="true">
			<arg line="config list --project=${appengine.app.id}" />
		</exec>
	</target>

	<target name="-info-sql" if="project.sql.instance.id">
		<echo>
+++ Cloud SQL info: ${project.sql.instance.id} +++
		</echo>
		<exec executable="gcloud" failonerror="true">
			<arg line="beta sql instances describe ${project.sql.instance.id} --project=${appengine.app.id}" />
		</exec>
		<echo message="${line.separator}Cloud SQL Users:" />
		<exec executable="gcloud" failonerror="true">
			<arg line="beta sql users list --instance=${project.sql.instance.id} --project=${appengine.app.id}" />
		</exec>
	</target>

	<target name="-info-billing" if="project.billing.id">
		<echo>
+++ Billing info: ${project.billing.id} +++
		</echo>
		<exec executable="gcloud" failonerror="true">
			<arg line="alpha billing accounts projects list ${project.billing.id}" />
		</exec>
	</target>

	<target name="create-project" depends="-init,-create-project,info" />

	<target name="delete-project" depends="-init,-delete-confirm,-delete-cloud-sql,-delete-base-project" />

</project>
