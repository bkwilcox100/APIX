# deployment steps:
# 1. deploy the Open API spec using:
#      gcloud service-management deploy target/openapi.yaml
# 2. the output of the above command will include something like the following:
#    Service Configuration [config_id] uploaded for service [name]
# 3. update the appengine.app.modules.shoppinglist.endpoints.config.id
#    environment property with the config_id value from step #2.
# 4. deploy the full application using "mvn appengine:deploy"
# 5. callers can generate API keys (passed as "key=API_KEY") using
#    https://console.cloud.google.com/apis/credentials

swagger: "2.0"
info:
  title: "HEB Liquid Sky Admin Rest Endpoints"
  description: "HEB Middle Layer Admin Rest endpoints"
  version: "1.0.0"
externalDocs:
  description: Internal Confluence page
  url: https://confluence.heb.com:8443/display/ESELLING/Admin+Rest+Microservice

# localhost entry is left here but commented out for testing.
# This file can be pasted into the UI http://editor.swagger.io/ and
# used to test locally or against the deployed service in the cloud
# depending on which host entry below is uncommented.

host: adminrest-dot-${appengine.app.id}.appspot.com
#host: localhost:8080

# allow cross-domain ajax requests
# see https://cloud.google.com/endpoints/docs/release-notes
x-google-endpoints:
  - name: adminrest-dot-${appengine.app.id}.appspot.com
    allowCors: true

consumes:
  - application/json
produces:
  - application/json
schemes:
  - https
paths:

# =================================================================
#  Path definitions for AppProperties configuration.
# =================================================================

  /adminrest/v1/appproperties:
    post:
      description: Creates AppProperties resources
      operationId: createBatchAppProperties
      parameters:
        - name: body
          in: body
          description: Array of AppProperties resources to create
          required: true
          schema:
            type: object
      responses:
        200:
          description: A successful response
          schema:
            $ref: '#/definitions/BatchResponse'
        207:
          description: Some resources created successfully and others unsuccessfully
          schema:
            $ref: '#/definitions/BatchResponse'
        default:
          description: Some Error
          schema:
            $ref: '#/definitions/BatchResponse'
    get:
      description: Reads all items from the AppProperties collection
      operationId: readAppPropertiesCollection
      responses:
        200:
          description: A successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/AppProperties'
        default:
          description: Some Error Occured
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      description: Deletes AppProperties resources based on a list of appid's sent in a list
      operationId: deleteBatchAppPropertiesResource
      parameters:
        - name: body
          in: body
          description: Array of AppProperties resource appid's to delete. (array of strings)
          required: true
          schema:
            type: object
      responses:
        200:
          description: A successful response
          schema:
            $ref: '#/definitions/BatchResponse'
        default:
          description: Some Error Occured
          schema:
            $ref: '#/definitions/ErrorResponse'


  /adminrest/v1/appproperties/{appId}:
    get:
      description: Reads the AppProperties resource with the given appId
      operationId: readAppPropertiesResource
      parameters:
        - name: appId
          in: path
          required: true
          type: string
      responses:
        200:
         description: A successful response
         schema:
           $ref: '#/definitions/AppProperties'
        default:
          description: Some Error Occured
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      description: Updates the AppProperties resource with the given appId
      operationId: updateAppPropertiesResource
      parameters:
        - name: appId
          in: path
          required: true
          type: string
        - name: body
          in: body
          description: Full or partial AppProperties object containing values to update the specified resource with.
          required: true
          schema:
            type: object
            #$ref: '#/definitions/AppProperties'
      responses:
        200:
          description: A successful response
          schema:
            $ref: '#/definitions/AppProperties'
        default:
          description: Some Error Occured
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      description: Deletes the AppProperties resource with the given appId
      operationId: deleteAppPropertiesResource
      parameters:
        - name: appId
          in: path
          required: true
          type: string
      responses:
        200:
          description: A successful response
          schema:
            $ref: '#/definitions/SuccessMessage'
        default:
          description: Some Error Occured
          schema:
            $ref: '#/definitions/ErrorResponse'


  /adminrest/v1/appproperties/{appId}/appversion:
    post:
      description: Creates AppVersion resources
      operationId: createBatchAppVersion
      parameters:
        - name: appId
          in: path
          required: true
          type: string
        - name: body
          in: body
          description: Array of AppVersion resources to create
          required: true
          schema:
            type: object
      responses:
        200:
          description: All resources were created successfully
          schema:
            $ref: '#/definitions/BatchResponse'
        207:
          description: Some resources created successfully and others unsuccessfully
          schema:
            $ref: '#/definitions/BatchResponse'
        default:
          description: Some Error Occured
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      description: Reads all AppVersion resources in the collection
      operationId: readAppVersionCollection
      parameters:
        - name: appId
          in: path
          required: true
          type: string
      responses:
        200:
          description: A successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/AppVersion'
        default:
          description: Some Error Occured
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      description: Deletes AppVersion resources based on a list of appVersionId's sent in a list
      operationId: deleteBatchAppVersionResource
      parameters:
        - name: appId
          in: path
          required: true
          type: string
        - name: body
          in: body
          description: Array of AppVersion resource appVersionId's to delete. (array of strings)
          required: true
          schema:
            type: object
      responses:
        200:
          description: A successful response
          schema:
            $ref: '#/definitions/BatchResponse'
        default:
          description: Some Error Occured
          schema:
            $ref: '#/definitions/ErrorResponse'

  /adminrest/v1/appproperties/{appId}/appversion/{appVersionId}:
    get:
      description: Reads the AppVersion resource with the given appVersionId
      operationId: readAppVersionResource
      parameters:
        - name: appId
          in: path
          required: true
          type: string
        - name: appVersionId
          in: path
          required: true
          type: string
      responses:
        200:
          description: A successful response
          schema:
            $ref: '#/definitions/AppVersion'
        default:
          description: Some Error Occured
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      description: Updates the AppVersion resource with the given appVersionId
      operationId: updateAppVersionResource
      parameters:
        - name: appId
          in: path
          required: true
          type: string
        - name: appVersionId
          in: path
          required: true
          type: string
        - name: body
          in: body
          description: A complete or partial AppVersion object containing items to update
          required: true
          schema:
            $ref: '#/definitions/AppVersion'
      responses:
        200:
          description: A successful response
          schema:
            $ref: '#/definitions/AppProperties'
        default:
          description: Some error occured
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      description: Deletes the AppVersion resource with the given appVersionId
      operationId: deleteAppVersionResource
      parameters:
        - name: appId
          in: path
          required: true
          type: string
        - name: appVersionId
          in: path
          required: true
          type: string
      responses:
        200:
          description: A successful response
          schema:
            $ref: '#/definitions/SuccessMessage'
        default:
          description: Some Error Occured
          schema:
            $ref: '#/definitions/ErrorResponse'

# =================================================================
#  Path definitions for ApiCollection configuration.
# =================================================================
  /adminrest/v1/apicollection:
    post:
      description: Creates ApiCollection resources
      operationId: createBatchApiCollection
      parameters:
        - name: body
          in: body
          description: Array of ApiCollection resources to create
          required: true
          schema:
            type: object
      responses:
        200:
          description: A successful response
          schema:
            $ref: '#/definitions/BatchResponse'
        207:
          description: Some resources created successfully and others unsuccessfully
          schema:
            $ref: '#/definitions/BatchResponse'
        default:
          description: Some Error
          schema:
            $ref: '#/definitions/BatchResponse'
    get:
      description: Reads all items from the ApiCollection collection
      operationId: readApiCollectionCollection
      responses:
        200:
          description: A successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/ApiCollection'
        default:
          description: Some Error Occured
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      description: Deletes ApiCollection resources based on a list of id's sent in a list
      operationId: deleteBatchApiCollectionResource
      parameters:
        - name: body
          in: body
          description: Array of ApiCollection resource id's to delete. (array of strings)
          required: true
          schema:
            type: object
      responses:
        200:
          description: A successful response
          schema:
            $ref: '#/definitions/BatchResponse'
        default:
          description: Some Error Occured
          schema:
            $ref: '#/definitions/ErrorResponse'

  /adminrest/v1/apicollection/{collectionId}:
    get:
      description: Reads the ApiCollection resource with the given Id
      operationId: readApiCollectionResource
      parameters:
        - name: collectionId
          in: path
          required: true
          type: string
      responses:
        200:
          description: A successful response
          schema:
            $ref: '#/definitions/ApiCollection'
        default:
          description: Some Error Occured
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      description: Updates the ApiCollection resource with the given id
      operationId: updateApiCollectionResource
      parameters:
        - name: collectionId
          in: path
          required: true
          type: string
        - name: body
          in: body
          description: Full or partial ApiCollection object containing values to update the specified resource with.
          required: true
          schema:
            $ref: '#/definitions/ApiCollection'
      responses:
        200:
          description: A successful response
          schema:
            $ref: '#/definitions/ApiCollection'
        default:
          description: Some Error Occured
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      description: Deletes the ApiCollection resource with the given id
      operationId: deleteApiCollectionResource
      parameters:
        - name: collectionId
          in: path
          required: true
          type: string
      responses:
        200:
          description: A successful response
          schema:
            $ref: '#/definitions/SuccessMessage'
        default:
          description: Some Error Occured
          schema:
            $ref: '#/definitions/ErrorResponse'

  /adminrest/v1/apicollection/{collectionId}/serviceDescriptions:
    post:
      description: Creates ServiceDescription resources
      operationId: createBatchServiceDescription
      parameters:
        - name: body
          in: body
          description: Array of ServiceDescription resources to create
          required: true
          schema:
            type: object
        - name: collectionId
          in: path
          required: true
          type: string
      responses:
        200:
          description: A successful response
          schema:
            $ref: '#/definitions/BatchResponse'
        207:
          description: Some resources created successfully and others unsuccessfully
          schema:
            $ref: '#/definitions/BatchResponse'
        default:
          description: Some Error
          schema:
            $ref: '#/definitions/BatchResponse'
    get:
      description: Reads all items from the ServiceDescription collection
      operationId: readServiceDescriptionCollection
      parameters:
        - name: collectionId
          in: path
          required: true
          type: string
      responses:
        200:
          description: A successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/ServiceDescription'
        default:
          description: Some Error Occured
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      description: Deletes ServiceDescription resources based on a list of id's sent in a list
      operationId: deleteBatchServiceDescriptionResource
      parameters:
        - name: body
          in: body
          description: Array of ServiceDescription resource id's to delete. (array of strings)
          required: true
          schema:
            type: object
        - name: collectionId
          in: path
          required: true
          type: string
      responses:
        200:
          description: A successful response
          schema:
            $ref: '#/definitions/BatchResponse'
        default:
          description: Some Error Occured
          schema:
            $ref: '#/definitions/ErrorResponse'

  /adminrest/v1/apicollection/{collectionId}/serviceDescriptions/{serviceDescriptionId}:
    get:
      description: Reads the ServiceDescription resource with the given Id
      operationId: readServiceDescriptionResource
      parameters:
        - name: collectionId
          in: path
          required: true
          type: string
        - name: serviceDescriptionId
          in: path
          required: true
          type: string
      responses:
        200:
          description: A successful response
          schema:
            $ref: '#/definitions/ServiceDescription'
        default:
          description: Some Error Occured
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      description: Updates the ServiceDescription resource with the given id
      operationId: updateServiceDescriptionResource
      parameters:
        - name: collectionId
          in: path
          required: true
          type: string
        - name: serviceDescriptionId
          in: path
          required: true
          type: string
        - name: body
          in: body
          description: Full or partial ServiceDescription object containing values to update the specified resource with.
          required: true
          schema:
            $ref: '#/definitions/ServiceDescription'
      responses:
        200:
          description: A successful response
          schema:
            $ref: '#/definitions/ServiceDescription'
        default:
          description: Some Error Occured
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      description: Deletes the ServiceDescription resource with the given id
      operationId: deleteServiceDescriptionResource
      parameters:
        - name: collectionId
          in: path
          required: true
          type: string
        - name: serviceDescriptionId
          in: path
          required: true
          type: string
      responses:
        200:
          description: A successful response
          schema:
            $ref: '#/definitions/SuccessMessage'
        default:
          description: Some Error Occured
          schema:
            $ref: '#/definitions/ErrorResponse'


  /adminrest/v1/apicollection/{collectionId}/serviceDescriptions/{serviceDescriptionId}/serviceVersions:
    post:
      description: Creates ServiceVersion resources
      operationId: createBatchServiceVersion
      parameters:
        - name: body
          in: body
          description: Array of ServiceVersion resources to create
          required: true
          schema:
            type: object
        - name: collectionId
          in: path
          required: true
          type: string
        - name: serviceDescriptionId
          in: path
          required: true
          type: string
      responses:
        200:
          description: A successful response
          schema:
            $ref: '#/definitions/BatchResponse'
        207:
          description: Some resources created successfully and others unsuccessfully
          schema:
            $ref: '#/definitions/BatchResponse'
        default:
          description: Some Error
          schema:
            $ref: '#/definitions/BatchResponse'
    get:
      description: Reads all items from the ServiceVersion collection
      operationId: readServiceVersionCollection
      parameters:
        - name: collectionId
          in: path
          required: true
          type: string
        - name: serviceDescriptionId
          in: path
          required: true
          type: string
      responses:
        200:
         description: A successful response
         schema:
          type: array
          items:
            $ref: '#/definitions/ServiceVersion'
        default:
          description: Some Error Occured
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      description: Deletes ServiceVersion resources based on a list of id's sent in a list
      operationId: deleteBatchServiceVersionResource
      parameters:
        - name: body
          in: body
          description: Array of ServiceVersion resource id's to delete. (array of strings)
          required: true
          schema:
            type: object
        - name: collectionId
          in: path
          required: true
          type: string
        - name: serviceDescriptionId
          in: path
          required: true
          type: string
      responses:
        200:
          description: A successful response
          schema:
            $ref: '#/definitions/BatchResponse'
        default:
          description: Some Error Occured
          schema:
            $ref: '#/definitions/ErrorResponse'

  /adminrest/v1/apicollection/{collectionId}/serviceDescriptions/{serviceDescriptionId}/serviceVersions/{serviceVersionId}:
    get:
      description: Reads the ServiceVersion resource with the given Id
      operationId: readServiceVersionResource
      parameters:
        - name: collectionId
          in: path
          required: true
          type: string
        - name: serviceDescriptionId
          in: path
          required: true
          type: string
        - name: serviceVersionId
          in: path
          required: true
          type: string
      responses:
        200:
          description: A successful response
          schema:
            $ref: '#/definitions/ServiceVersion'
        default:
          description: Some Error Occured
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      description: Updates the ServiceVersion resource with the given id
      operationId: updateServiceVersionResource
      parameters:
        - name: collectionId
          in: path
          required: true
          type: string
        - name: serviceDescriptionId
          in: path
          required: true
          type: string
        - name: serviceVersionId
          in: path
          required: true
          type: string
        - name: body
          in: body
          description: Full or partial ServiceVersion object containing values to update the specified resource with.
          required: true
          schema:
            $ref: '#/definitions/ServiceVersion'
      responses:
        200:
          description: A successful response
          schema:
            $ref: '#/definitions/ServiceVersion'
        default:
          description: Some Error Occured
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      description: Deletes the ServiceVersion resource with the given id
      operationId: deleteServiceVersionResource
      parameters:
        - name: collectionId
          in: path
          required: true
          type: string
        - name: serviceDescriptionId
          in: path
          required: true
          type: string
        - name: serviceVersionId
          in: path
          required: true
          type: string
      responses:
        200:
          description: A successful response
          schema:
            $ref: '#/definitions/SuccessMessage'
        default:
          description: Some Error Occured
          schema:
            $ref: '#/definitions/ErrorResponse'


  /adminrest/v1/apicollection/{collectionId}/serviceDescriptions/{serviceDescriptionId}/serviceVersions/{serviceVersionId}/resourcePaths:
    post:
      description: Creates ResourcePath resources
      operationId: createBatchResourcePath
      parameters:
        - name: body
          in: body
          description: Array of ResourcePath resources to create
          required: true
          schema:
            type: object
        - name: collectionId
          in: path
          required: true
          type: string
        - name: serviceDescriptionId
          in: path
          required: true
          type: string
        - name: serviceVersionId
          in: path
          required: true
          type: string
      responses:
        200:
          description: A successful response
          schema:
            $ref: '#/definitions/BatchResponse'
        207:
          description: Some resources created successfully and others unsuccessfully
          schema:
            $ref: '#/definitions/BatchResponse'
        default:
          description: Some Error
          schema:
            $ref: '#/definitions/BatchResponse'
    get:
      description: Reads all items from the ResourcePath collection
      operationId: readResourcePathCollection
      parameters:
        - name: collectionId
          in: path
          required: true
          type: string
        - name: serviceDescriptionId
          in: path
          required: true
          type: string
        - name: serviceVersionId
          in: path
          required: true
          type: string
      responses:
        200:
          description: A successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/ResourcePath'
        default:
          description: Some Error Occured
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      description: Deletes ResourcePath resources based on a list of id's sent in a list
      operationId: deleteBatchResourcePathResource
      parameters:
        - name: collectionId
          in: path
          required: true
          type: string
        - name: serviceDescriptionId
          in: path
          required: true
          type: string
        - name: serviceVersionId
          in: path
          required: true
          type: string
        - name: body
          in: body
          description: Array of ResourcePath resource id's to delete. (array of strings)
          required: true
          schema:
            type: object
      responses:
        200:
          description: A successful response
          schema:
            $ref: '#/definitions/BatchResponse'
        default:
          description: Some Error Occured
          schema:
            $ref: '#/definitions/ErrorResponse'

  /adminrest/v1/apicollection/{collectionId}/serviceDescriptions/{serviceDescriptionId}/serviceVersions/{serviceVersionId}/resourcePaths/{resourcePathId}:
    get:
      description: Reads the ResourcePath resource with the given Id
      operationId: readResourcePathResource
      parameters:
        - name: collectionId
          in: path
          required: true
          type: string
        - name: serviceDescriptionId
          in: path
          required: true
          type: string
        - name: serviceVersionId
          in: path
          required: true
          type: string
        - name: resourcePathId
          in: path
          required: true
          type: string
      responses:
        200:
          description: A successful response
          schema:
            $ref: '#/definitions/ResourcePath'
        default:
          description: Some Error Occured
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      description: Updates the ResourcePath resource with the given id
      operationId: updateResourcePathResource
      parameters:
        - name: collectionId
          in: path
          required: true
          type: string
        - name: serviceDescriptionId
          in: path
          required: true
          type: string
        - name: serviceVersionId
          in: path
          required: true
          type: string
        - name: resourcePathId
          in: path
          required: true
          type: string
        - name: body
          in: body
          description: Full or partial ResourcePath object containing values to update the specified resource with.
          required: true
          schema:
            $ref: '#/definitions/ResourcePath'
      responses:
        200:
          description: A successful response
          schema:
            $ref: '#/definitions/ResourcePath'
        default:
          description: Some Error Occured
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      description: Deletes the ResourcePath resource with the given id
      operationId: deleteResourcePathResource
      parameters:
        - name: collectionId
          in: path
          required: true
          type: string
        - name: serviceDescriptionId
          in: path
          required: true
          type: string
        - name: serviceVersionId
          in: path
          required: true
          type: string
        - name: resourcePathId
          in: path
          required: true
          type: string
      responses:
        200:
          description: A successful response
          schema:
            $ref: '#/definitions/SuccessMessage'
        default:
          description: Some Error Occured
          schema:
            $ref: '#/definitions/ErrorResponse'






# =================================================================
#  Path definitions for AuditLog
# =================================================================
  /adminrest/v1/auditlog:
    get:
      description: Reads all items from the Audit Log
      operationId: readAuditLogCollection
      responses:
        200:
          description: A successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/AuditLogEntry'
        default:
          description: Some Error Occured
          schema:
            $ref: '#/definitions/ErrorResponse'

# This section requires all requests that are not specifically overridden to require an api key
security:
- api_key: []
securityDefinitions:
  # This section configures basic authentication with an API key.
  api_key:
    type: apiKey
    name: key
    in: query
  google_id_token:
    authorizationUrl: ""
    flow: "implicit"
    type: "oauth2"
    x-google-issuer: "https://accounts.google.com"
    x-google-audiences: "547051530764-1g8ikir28c28v3mhkspemooojlru1mjp.apps.googleusercontent.com"
  Oauth2:
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    description: Oauth 2.0 implicit authentication
    flow: implicit
    scopes:
      'https://www.googleapis.com/auth/userinfo.email': View your email address
      'https://www.googleapis.com/auth/userinfo.profile': View your basic profile info
    type: oauth2

# The defintions section defines shared objects that are used in requests/responses
definitions:

# definitions for AppProperties (AppVersion)
  AppProperties:
    type: object
    required:
    - appId
    properties:
      appId:
        type: string
      description:
        type: string
      appVersions:
        type: array
        items:
          $ref: '#/definitions/AppVersion'
      creationDate:
        type: string
      lastModifiedDate:
        type: string
  AppVersion:
    type: object
    required:
    - appVersionId
    - osName
    - osVersion
    properties:
      appVersionId:
        type: string
      osName:
        type: string
      osVersion:
        type: string
      creationDate:
        type: string
      lastModifiedDate:
        type: string

# definitions for API Discovery Service.
  ResourcePath:
    properties:
      batchPath:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      path:
        type: string
  ServiceDescription:
    properties:
      currentVersion:
        type: string
      description:
        type: string
      documentation:
        type: string
      id:
        type: string
      labels:
        type: string
      name:
        type: string
      openApiSpecUrl:
        type: string
      serviceVersions:
        type: array
        items:
          "$ref": "#/definitions/ServiceVersion"
  ServiceVersion:
    properties:
      basePath:
        type: string
      description:
        type: string
      hostName:
        type: string
      id:
        type: string
      openApiSpecUrl:
        type: string
      resourcePaths:
        type: array
        items:
          "$ref": "#/definitions/ResourcePath"
      versionNumber:
        type: string
  ApiCollection:
    properties:
      contactInfo:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      serviceDescriptions:
        type: array
        items:
          "$ref": "#/definitions/ServiceDescription"

# definitions for standard infrastructure objects.
  SuccessMessage:
    type: object
    properties:
      success:
        type: array
        items:
          type: string
  Message:
    type: object
    properties:
      code:
        type: string
      text:
        type: string
  ErrorResponse:
    type: object
    properties:
      id:
        type: string
      status:
        type: string
      object:
        type: object
      message:
          $ref: '#/definitions/Message'
  BatchResponse:
    type: object
    properties:
      success:
        type: array
        items:
          type: string
      errors:
        type: array
        items:
          $ref: '#/definitions/AppVersion'
  AuditLogEntry:
    type: object
    properties:
      changeId:
        type: string
      dataItemType:
        type: string
      itemId:
        type: string
      userId:
        type: string
      operation:
        type: string
      jsonResponse:
        type: string
      creationDate:
        type: string
      lastModifiedDate:
       type: string
  JsonMap: {}
